package handlers

import (
	"log"
	"strings"

	telegram "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// MainHandler –≥–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–∂–¥—É —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏
type MainHandler struct {
	botHandlers   *BotHandlers
	adminHandlers *AdminHandlers
}

// NewMainHandler —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –≥–ª–∞–≤–Ω–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
func NewMainHandler(botHandlers *BotHandlers, adminHandlers *AdminHandlers) *MainHandler {
	return &MainHandler{
		botHandlers:   botHandlers,
		adminHandlers: adminHandlers,
	}
}

// HandleUpdate –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç –µ–≥–æ –º–µ–∂–¥—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏
func (h *MainHandler) HandleUpdate(update telegram.Update) {
	defer func() {
		if r := recover(); r != nil {
			log.Printf("‚ö†Ô∏è –ü–∞–Ω–∏–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: %v", r)
		}
	}()

	if update.Message == nil {
		return
	}

	log.Printf("üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç %s: %s", update.Message.From.UserName, update.Message.Text)

	// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	h.botHandlers.RegisterUser(update.Message.From.UserName, update.Message.Chat.ID)

	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–æ–º–∞–Ω–¥—ã –∏ –ø–µ—Ä–µ–¥–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
	if update.Message.IsCommand() {
		switch update.Message.Command() {
		case "admin":
			h.adminHandlers.HandleAdminCommand(update)
		default:
			h.botHandlers.HandleCommand(update)
		}
	} else if strings.HasPrefix(update.Message.Text, "/find") {
		h.botHandlers.HandleFindCommand(update)
	} else {
		h.botHandlers.HandleDefaultMessage(update)
	}
}
