package handlers

import (
	"fmt"
	"log"
	"strconv"
	"strings"

	"vetbot/internal/database"
	"vetbot/pkg/utils"

	telegram "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// AdminHandlers —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
type AdminHandlers struct {
	bot    *telegram.BotAPI
	db     *database.Database
	config *utils.Config
}

// NewAdminHandlers —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
func NewAdminHandlers(bot *telegram.BotAPI, db *database.Database, config *utils.Config) *AdminHandlers {
	return &AdminHandlers{
		bot:    bot,
		db:     db,
		config: config,
	}
}

// HandleAdminCommand –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
func (h *AdminHandlers) HandleAdminCommand(update telegram.Update) {
	chatID := update.Message.Chat.ID
	text := update.Message.Text

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
	isAdmin, err := h.db.IsAdmin(chatID)
	if err != nil {
		log.Printf("Error checking admin rights: %v", err)
		h.sendMessage(chatID, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
		return
	}

	if !isAdmin {
		h.sendMessage(chatID, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
		return
	}

	// –†–∞–∑–±–∏—Ä–∞–µ–º –∫–æ–º–∞–Ω–¥—É
	parts := strings.Fields(text)
	if len(parts) < 2 {
		h.showAdminHelp(chatID)
		return
	}

	subCommand := parts[1]

	switch subCommand {
	case "add":
		h.handleAddVet(chatID)
	case "edit":
		if len(parts) >= 3 {
			h.handleEditVet(chatID, parts[2])
		} else {
			h.sendMessage(chatID, "‚ùå –£–∫–∞–∂–∏—Ç–µ ID –≤—Ä–∞—á–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: /admin edit [id]")
		}
	case "delete":
		if len(parts) >= 3 {
			h.handleDeleteVet(chatID, parts[2])
		} else {
			h.sendMessage(chatID, "‚ùå –£–∫–∞–∂–∏—Ç–µ ID –≤—Ä–∞—á–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: /admin delete [id]")
		}
	case "stats":
		h.handleStats(chatID)
	case "list":
		h.handleAdminList(chatID)
	default:
		h.showAdminHelp(chatID)
	}
}

// handleAddVet –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≤—Ä–∞—á–∞
func (h *AdminHandlers) handleAddVet(chatID int64) {
	message := `üë®‚Äç‚öïÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≤—Ä–∞—á–∞

–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
–ò–º—è –§–∞–º–∏–ª–∏—è
–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
–ê–¥—Ä–µ—Å
–¢–µ–ª–µ—Ñ–æ–Ω
–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã

–ü—Ä–∏–º–µ—Ä:
–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤
–¢–µ—Ä–∞–ø–µ–≤—Ç
—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è, 1
+7 (999) 123-45-67
09:00-18:00`

	h.sendMessage(chatID, message)

	// –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –æ–∂–∏–¥–∞–Ω–∏—è —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –¥–∞–Ω–Ω—ã–º–∏
	// –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞ (state machine)
	h.sendMessage(chatID, "‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ –º–Ω–æ–≥–æ—Å–æ–æ–±—â–µ–Ω–Ω—ã–π –≤–≤–æ–¥ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä—è–º–æ–π SQL –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Ä–∞—á–µ–π.")
}

// handleEditVet –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–∞—á–∞
func (h *AdminHandlers) handleEditVet(chatID int64, vetIDStr string) {
	// –ü–∞—Ä—Å–∏–º ID –≤—Ä–∞—á–∞
	vetID, err := strconv.ParseInt(vetIDStr, 10, 64)
	if err != nil {
		h.sendMessage(chatID, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –≤—Ä–∞—á–∞")
		return
	}

	// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤—Ä–∞—á–∞
	vet, err := h.db.GetVeterinarianByID(vetID)
	if err != nil {
		h.sendMessage(chatID, fmt.Sprintf("‚ùå –í—Ä–∞—á —Å ID %d –Ω–µ –Ω–∞–π–¥–µ–Ω", vetID))
		return
	}

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä–∞—á–∞
	message := fmt.Sprintf(`‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–∞—á–∞ ID: %d

–¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ:
üë®‚Äç‚öïÔ∏è –ò–º—è: %s
üéØ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: %s
üìç –ê–¥—Ä–µ—Å: %s
üìû –¢–µ–ª–µ—Ñ–æ–Ω: %s
üïê –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: %s

–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
–∏–º—è=–ù–æ–≤–æ–µ –ò–º—è
—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è=–ù–æ–≤–∞—è –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
–∞–¥—Ä–µ—Å=–ù–æ–≤—ã–π –ê–¥—Ä–µ—Å
—Ç–µ–ª–µ—Ñ–æ–Ω=–ù–æ–≤—ã–π –¢–µ–ª–µ—Ñ–æ–Ω
—á–∞—Å—ã=–ù–æ–≤—ã–µ –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã

–ü—Ä–∏–º–µ—Ä:
–∏–º—è=–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤
—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è=–•–∏—Ä—É—Ä–≥`, vetID, vet.Name, vet.Specialty, vet.Address, vet.Phone, vet.WorkHours)

	h.sendMessage(chatID, message)
	h.sendMessage(chatID, "‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä—è–º–æ–π SQL –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.")
}

// handleDeleteVet –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–∞—á–∞
func (h *AdminHandlers) handleDeleteVet(chatID int64, vetIDStr string) {
	// –ü–∞—Ä—Å–∏–º ID –≤—Ä–∞—á–∞
	vetID, err := strconv.ParseInt(vetIDStr, 10, 64)
	if err != nil {
		h.sendMessage(chatID, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –≤—Ä–∞—á–∞")
		return
	}

	// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤—Ä–∞—á–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
	vet, err := h.db.GetVeterinarianByID(vetID)
	if err != nil {
		h.sendMessage(chatID, fmt.Sprintf("‚ùå –í—Ä–∞—á —Å ID %d –Ω–µ –Ω–∞–π–¥–µ–Ω", vetID))
		return
	}

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ä–∞—á–µ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
	message := fmt.Sprintf(`üóëÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –≤—Ä–∞—á–∞:

üë®‚Äç‚öïÔ∏è –ò–º—è: %s
üéØ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: %s
üìç –ê–¥—Ä–µ—Å: %s
üìû –¢–µ–ª–µ—Ñ–æ–Ω: %s

–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ: /confirm_delete %d
–î–ª—è –æ—Ç–º–µ–Ω—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ: /cancel`, vet.Name, vet.Specialty, vet.Address, vet.Phone, vetID)

	h.sendMessage(chatID, message)
}

// handleStats –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–æ—Ç–∞
func (h *AdminHandlers) handleStats(chatID int64) {
	// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –≤—Ä–∞—á–µ–π
	vets, err := h.db.GetAllVeterinarians()
	if err != nil {
		h.sendMessage(chatID, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
		return
	}

	// –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
	var userCount int
	err = h.db.DB.QueryRow("SELECT COUNT(*) FROM users").Scan(&userCount)
	if err != nil {
		userCount = 0
	}

	var adminCount int
	err = h.db.DB.QueryRow("SELECT COUNT(*) FROM users WHERE is_admin = true").Scan(&adminCount)
	if err != nil {
		adminCount = 0
	}

	message := fmt.Sprintf(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ VetBot

üë®‚Äç‚öïÔ∏è –í—Ä–∞—á–µ–π –≤ –±–∞–∑–µ: %d
üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: %d
‚öôÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: %d

üí° –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ`, len(vets), userCount, adminCount)

	h.sendMessage(chatID, message)
}

// handleAdminList –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Ä–∞—á–µ–π —Å ID
func (h *AdminHandlers) handleAdminList(chatID int64) {
	// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –≤—Ä–∞—á–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	veterinarians, err := h.db.GetAllVeterinarians()
	if err != nil {
		log.Printf("Error getting veterinarians: %v", err)
		h.sendMessage(chatID, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã")
		return
	}

	if len(veterinarians) == 0 {
		h.sendMessage(chatID, "üì≠ –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –≤—Ä–∞—á–µ–π")
		return
	}

	// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –≤—Ä–∞—á–µ–π —Å ID
	var message strings.Builder
	message.WriteString("üë®‚Äç‚öïÔ∏è –°–ø–∏—Å–æ–∫ –≤—Ä–∞—á–µ–π (—Å ID):\n\n")

	for _, vet := range veterinarians {
		message.WriteString(fmt.Sprintf("üÜî ID: %d\n", vet.ID))
		message.WriteString(fmt.Sprintf("   üë®‚Äç‚öïÔ∏è –ò–º—è: %s\n", vet.Name))
		message.WriteString(fmt.Sprintf("   üéØ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: %s\n", vet.Specialty))
		message.WriteString(fmt.Sprintf("   üìç –ê–¥—Ä–µ—Å: %s\n", vet.Address))
		message.WriteString(fmt.Sprintf("   üìû –¢–µ–ª–µ—Ñ–æ–Ω: %s\n", vet.Phone))
		message.WriteString(fmt.Sprintf("   üïê –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: %s\n\n", vet.WorkHours))
	}

	message.WriteString("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ID –¥–ª—è –∫–æ–º–∞–Ω–¥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è")

	h.sendMessage(chatID, message.String())
}

// showAdminHelp –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º –∫–æ–º–∞–Ω–¥–∞–º
func (h *AdminHandlers) showAdminHelp(chatID int64) {
	message := `‚öôÔ∏è –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º –∫–æ–º–∞–Ω–¥–∞–º:

/admin add - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –≤—Ä–∞—á–∞
/admin edit [id] - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–∞—á–∞
/admin delete [id] - —É–¥–∞–ª–∏—Ç—å –≤—Ä–∞—á–∞
/admin stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
/admin list - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤—Ä–∞—á–µ–π (—Å ID)

–ü—Ä–∏–º–µ—Ä—ã:
/admin edit 1 - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–∞—á–∞ —Å ID 1
/admin delete 2 - —É–¥–∞–ª–∏—Ç—å –≤—Ä–∞—á–∞ —Å ID 2

üí° –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ ID –≤—Ä–∞—á–µ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /admin list`

	h.sendMessage(chatID, message)
}

// sendMessage –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —á–∞—Ç
func (h *AdminHandlers) sendMessage(chatID int64, text string) {
	msg := telegram.NewMessage(chatID, text)
	msg.ParseMode = "HTML"

	_, err := h.bot.Send(msg)
	if err != nil {
		log.Printf("Error sending message: %v", err)
	}
}
